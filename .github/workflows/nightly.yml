name: nightly

on:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build-nightly:
    name: Nightly build and rolling release
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - aarch64-unknown-linux-musl
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Build release binary
        run: |
          set -euxo pipefail
          cross build --release --manifest-path cli/Cargo.toml --target ${{ matrix.target }}

      - name: Package binary
        run: |
          set -euxo pipefail
          mkdir -p artifacts
          ARCH=${{ matrix.target }}
          OUTNAME=owlsol-nightly-${ARCH}.tar.gz
          mkdir -p package
          cp target/${{ matrix.target }}/release/owlsol package/
          chmod +x package/owlsol
          tar -C package -czf "artifacts/${OUTNAME}" owlsol

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: owlsol-nightly-${{ matrix.target }}
          path: artifacts/*.tar.gz

  release:
    needs: build-nightly
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Flatten artifacts
        run: |
          mkdir -p release-assets
          find artifacts -type f -name '*.tar.gz' -exec mv {} release-assets/ \;
          cd release-assets
          sha256sum *.tar.gz > SHA256SUMS.txt

      - name: Update nightly tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -f nightly
          git push -f origin nightly

      - name: Create/Update nightly release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: nightly
          name: "Nightly Build"
          body: |
            **Automated nightly build from main branch**
            
            Built from commit: ${{ github.sha }}
            
            ### Install (Linux)
            ```bash
            curl -fsSL https://raw.githubusercontent.com/owl-sol/OWLSOL_CLI/main/scripts/install.sh | bash -s nightly
            ```
          files: release-assets/*
          prerelease: true
          draft: false
          token: ${{ secrets.GITHUB_TOKEN }}