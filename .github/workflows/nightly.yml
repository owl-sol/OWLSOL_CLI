name: nightly

on:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  linux-build:
    name: Linux (musl) builds
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - aarch64-unknown-linux-musl
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Build
        run: cross build --release --manifest-path cli/Cargo.toml --target ${{ matrix.target }}

      - name: Package
        run: |
          mkdir -p artifacts pkg
          cp target/${{ matrix.target }}/release/owlsol pkg/owlsol
          chmod +x pkg/owlsol
          tar -C pkg -czf artifacts/owlsol-nightly-${{ matrix.target }}.tar.gz owlsol

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: owlsol-nightly-${{ matrix.target }}
          path: artifacts/*.tar.gz

  mac-build:
    name: macOS builds
    strategy:
      fail-fast: false
      matrix:
        include:
          - runner: macos-13
            target: x86_64-apple-darwin
          - runner: macos-14
            target: aarch64-apple-darwin
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build
        run: cargo build --release --manifest-path cli/Cargo.toml --target ${{ matrix.target }}

      - name: Package
        run: |
          mkdir -p artifacts pkg
          cp target/${{ matrix.target }}/release/owlsol pkg/owlsol
          chmod +x pkg/owlsol
          tar -C pkg -czf artifacts/owlsol-nightly-${{ matrix.target }}.tar.gz owlsol

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: owlsol-nightly-${{ matrix.target }}
          path: artifacts/*.tar.gz

  release:
    name: Nightly release
    needs: [linux-build, mac-build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Prepare release assets
        run: |
          mkdir -p release-assets
          find artifacts -type f -name '*.tar.gz' -exec mv {} release-assets/ \;
          (cd release-assets && sha256sum *.tar.gz > SHA256SUMS.txt)

      - name: Update nightly tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -f nightly
          git push -f origin nightly

      - name: Create/Update nightly release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: nightly
          name: Nightly Build
          body: |
            Automated nightly build from main
            Commit: ${{ github.sha }}
          files: release-assets/*
          prerelease: true
          draft: false